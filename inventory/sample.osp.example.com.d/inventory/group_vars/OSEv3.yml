---

# The username Ansible should use to access the instances with
ansible_user: openshift

# Should Ansible use "become" to gain elevated privileges (i.e.: root)
ansible_become: True

# OpenShift Specific Configuration Options
# - Check the official OpenShift documentation for more details
deployment_type: openshift-enterprise
openshift_deployment_type: openshift-enterprise
openshift_release: v3.11

osm_default_node_selector: 'node-role.kubernetes.io/compute=true'
osm_use_cockpit: true
osm_cockpit_plugins:
- 'cockpit-kubernetes'

# Enable the Multi-Tenant plugin
os_sdn_network_plugin_name: 'redhat/openshift-ovs-multitenant'

# OpenShift FQDNs, DNS, App domain specific configurations
openshift_master_default_subdomain: "apps.{{ env_id }}.{{ dns_domain }}"
openshift_master_cluster_hostname: "master-0.{{ env_id }}.{{ dns_domain }}"
openshift_master_cluster_public_hostname: "console.{{ env_id }}.{{ dns_domain }}"

# Registry URL & Credentials
# For more info: https://access.redhat.com/terms-based-registry/
oreg_url: 'registry.redhat.io/openshift3/ose-${component}:${version}'
#oreg_auth_user: "{{ lookup('env', 'OREG_AUTH_USER' )}}"
#oreg_auth_password: "{{ lookup('env', 'OREG_AUTH_PASSWORD' )}}"

# Enable the OpenStack cloud provider for i.e.: dynamic storage with Cinder
openshift_cloudprovider_kind: openstack
openshift_cloudprovider_openstack_auth_url: "{{ lookup('env','OCP_OSP_AUTH_URL') }}"
openshift_cloudprovider_openstack_username: "{{ lookup('env','OCP_OSP_USERNAME') }}"
openshift_cloudprovider_openstack_password: "{{ lookup('env','OCP_OSP_PASSWORD') }}"
openshift_cloudprovider_openstack_domain_name: Default
openshift_cloudprovider_openstack_tenant_id: "{{ lookup('env','OS_PROJECT_ID') }}"
openshift_cloudprovider_openstack_tenant_name: "{{ lookup('env','OS_PROJECT_NAME') }}"
openshift_cloudprovider_openstack_region: "{{ lookup('env','OS_REGION_NAME') }}"
openshift_cloudprovider_openstack_blockstorage_version: v2

# Deploy Logging with dynamic storage
openshift_hosted_logging_deploy: true
openshift_logging_install_logging: true
openshift_logging_es_pvc_dynamic: true
openshift_logging_es_pvc_size: 40G
openshift_logging_curator_default_days: 1
openshift_logging_es_nodeselector:
  node-role.kubernetes.io/infra : true

# Deploy Metrics with dynamic storage
openshift_metrics_install_metrics: true
openshift_metrics_cassandra_storage_type: dynamic
openshift_metrics_cassandra_pvc_size: 40G
openshift_metrics_duration: 2

# HTPASSWD Identity Provider
# - update to other types of auth providers if necessary (i.e: LDAP, OAuth, ...)
openshift_master_identity_providers:
- 'name': 'htpasswd_auth'
  'login': 'true'
  'challenge': 'true'
  'kind': 'HTPasswdPasswordIdentityProvider'

# Uncommented to automatically create a set of test users with the above
# HTPASSWD Identity Provider
#create_users:
#  num_users: 5
#  prefix: 'rdu-user'
#  passwd_file: '/etc/origin/master/htpasswd'
#  password: 'rdu-sample'

# OpenShift Node specific parameters
openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
