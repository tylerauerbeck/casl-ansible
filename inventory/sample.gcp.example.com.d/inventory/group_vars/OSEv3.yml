---

deployment_type: openshift-enterprise
openshift_deployment_type: openshift-enterprise
openshift_master_cluster_method: native
openshift_release: v3.11


# HTPASSWD Identity Provider
openshift_master_identity_providers:
 - 'name': 'htpasswd_auth'
   'login': 'true'
   'challenge': 'true'
   'kind': 'HTPasswdPasswordIdentityProvider'


#this will create an admin/admin user
openshift_master_htpasswd_users:
  admin: $apr1$7aiANAYb$TOUYVUqnBqBlD5AQEIMYw1

openshift_hosted_manage_router: true

openshift_hosted_manage_registry: true

openshift_docker_options: "--log-driver=json-file --log-opt max-size=50m --log-opt max-file=100"

openshift_cloudprovider_kind: gce

os_sdn_network_plugin_name: 'redhat/openshift-ovs-networkpolicy'
#os_sdn_network_plugin_name: 'redhat/openshift-ovs-multitenant'
os_firewall_use_firewalld: true
osm_cluster_network_cidr: 10.1.0.0/16

# Registry URL & Credentials
# For more info: https://access.redhat.com/terms-based-registry/
oreg_url: 'registry.redhat.io/openshift3/ose-${component}:${version}'
#oreg_auth_user: "{{ lookup('env', 'OREG_AUTH_USER' )}}"
#oreg_auth_password: "{{ lookup('env', 'OREG_AUTH_PASSWORD' )}}"

openshift_enable_service_catalog: false
openshift_hosted_prometheus_deploy: false
openshift_cfme_install_app: false

openshift_hosted_registry_storage_provider: gcs
openshift_hosted_registry_storage_kind: object
openshift_hosted_registry_replicas: 1
openshift_hosted_registry_storage_gcs_bucket: "{{ google_registry_bucket_name }}"
openshift_hosted_registry_storage_gcs_keyfile: "{{ credentials_file }}"
openshift_hosted_registry_storage_gcs_rootdirectory: "/registry"

# Deploy Logging with dynamic storage
#openshift_logging_install_logging: false
#openshift_logging_es_pvc_dynamic: true
#openshift_logging_es_pvc_size: 40G
#openshift_logging_curator_default_days: 1
#openshift_logging_es_nodeselector: 
#  node-role.kubernetes.io/infra : true

openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 50 }}M' ]
  - key: kubeletArguments.system-reserved
    value: [ 'cpu={{ ansible_processor_vcpus * 50 }}m', 'memory={{ ansible_processor_vcpus * 100 }}M' ]
